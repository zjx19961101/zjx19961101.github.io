<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/02/22/npm%20%E5%AF%86%E4%BB%A4/"/>
    <url>/2021/02/22/npm%20%E5%AF%86%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>#####1.npm -v  查看 npm 的版本</p><h5 id="2-安装包方法-npm-install-XXX-包名"><a href="#2-安装包方法-npm-install-XXX-包名" class="headerlink" title="2. 安装包方法 npm install XXX(包名)"></a>2. 安装包方法 npm install XXX(包名)</h5><p>1.项目包</p><p>a.[开发依赖包] 开发测试环境用到的依赖包：npm i -D 包名称</p><p>b.- [核心依赖包] 线上环境用到的依赖包： npm i 包名称</p><p>2.全局包</p><p>a.安装命令： npm i -g 包名称</p><p>b.卸载命令： npm uninstall -g 包名称</p><h5 id="3-npm-init-y-：-产生一个package-json文件"><a href="#3-npm-init-y-：-产生一个package-json文件" class="headerlink" title="3.npm init -y ： 产生一个package.json文件"></a>3.npm init -y ： 产生一个package.json文件</h5><ol><li>dependencies: 在生产环境中所需要的软件包</li><li> devDependencies: 仅本地开发和测试所需要的软件包</li></ol><p>#####4.安装开发测试阶段用到的包，npm i -D 包名称@版本号</p><p>#####5.切换下载包服务器 在任意目录下依次执行：<code>npm i -g nrm</code> ==&gt; <code>nrm ls</code> ==&gt;<code>nrm use taobao</code></p><h5 id="6-发布自己的包"><a href="#6-发布自己的包" class="headerlink" title="6.发布自己的包"></a>6.发布自己的包</h5><p>1.在包的发布目录下面执行命令<code>npm publish</code></p><p>2.删除已经发布的包 <code>npm unpublish 包名称 --force</code></p><h5 id="7-卸载安装的包-npm-uninstall-XXX-包名"><a href="#7-卸载安装的包-npm-uninstall-XXX-包名" class="headerlink" title="7.卸载安装的包  npm uninstall XXX(包名)"></a>7.卸载安装的包  npm uninstall XXX(包名)</h5>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/02/22/%E6%A8%A1%E5%9D%97%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/"/>
    <url>/2021/02/22/%E6%A8%A1%E5%9D%97%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<p>###模块缓存机制</p><p>模块在第一次加载后会被缓存, 如果每次调用 require(‘foo’) 都解析到同一文件，则返回相同的对象,</p><p>  不会导致模块的代码被执行多次</p><p>####核心模块加载机制</p><p> require() 总是会优先加载核心模块, 比如 require(‘http’) 始终返回内置的 HTTP 模块，即使有同名文件</p><p>####自定义模块加载机制</p><p>   1.使用 require() 方法去加载自定义模块，必须指定路径格式，否则node 会默认把它当作是一个核心模块或来自 node_modules 目录下的第三方模块</p><ol start="2"><li><p>如果按确切的文件名没有找到模块，则 Node.js 会尝试带上 .js、 .json 或 .node 拓展名再加载</p></li><li><p>在加载的目录下查找 package.json 的文件, 并寻找 main 属性作为 require 的入口，如果找不到, Node.js 将会试图加载目录下的 index.js 或 index.node 文件</p><p>####第三方模块加载方式</p></li></ol><p>如果传递给 require() 的模块标识符不是一个核心模块，也没有以 ‘/‘ 、 ‘../‘ 或 ‘./‘ 开头，</p><p>  那么 Node.js 会从当前模块的父目录开始，尝试从它的 /node_modules 目录里加载模块。如果还是没有找到，</p><p>  则移动到再上一层父目录，直到文件系统的根目录。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>加油，奥利给</title>
    <link href="/2021/01/28/hello-world/"/>
    <url>/2021/01/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>邱硕大傻逼</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
